// <auto-generated />
using System;
using BarberShop2024.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BarberShop2024.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240430090928_Data2")]
    partial class Data2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BarberShop2024.Shared.BookMark", b =>
                {
                    b.Property<int>("BookMarkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookMarkId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateBook")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServicesSelect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookMarkId");

                    b.HasIndex("CustomerId");

                    b.ToTable("BookMarks");

                    b.HasData(
                        new
                        {
                            BookMarkId = 1,
                            CustomerId = 1,
                            DateBook = new DateTime(2024, 5, 1, 10, 9, 27, 725, DateTimeKind.Local).AddTicks(4972),
                            ServicesSelect = "Corte de Cabelo Masculino"
                        },
                        new
                        {
                            BookMarkId = 2,
                            CustomerId = 2,
                            DateBook = new DateTime(2024, 5, 2, 10, 9, 27, 725, DateTimeKind.Local).AddTicks(5098),
                            ServicesSelect = "Corte de Cabelo Feminino"
                        });
                });

            modelBuilder.Entity("BarberShop2024.Shared.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NIF")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.HasIndex("UserId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CustomerEmail = "cliente1@example.com",
                            CustomerName = "Cliente 1",
                            NIF = 123456789,
                            Phone = "987654321",
                            UserId = 2
                        },
                        new
                        {
                            CustomerId = 2,
                            CustomerEmail = "cliente2@example.com",
                            CustomerName = "Cliente 2",
                            NIF = 987654321,
                            Phone = "123456789",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BarberShop2024.Shared.ServicesBarber", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<string>("ServiceDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ServicePrice")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ServiceId");

                    b.HasIndex("UserId");

                    b.ToTable("ServicesBarbers");

                    b.HasData(
                        new
                        {
                            ServiceId = 1,
                            ServiceDescription = "Descrição do serviço 1",
                            ServiceName = "Corte de Cabelo Masculino",
                            ServicePrice = 20.0,
                            UserId = 1
                        },
                        new
                        {
                            ServiceId = 2,
                            ServiceDescription = "Descrição do serviço 2",
                            ServiceName = "Corte de Cabelo Feminino",
                            ServicePrice = 25.0,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("BarberShop2024.Shared.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("ShopName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserPhone")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            ShopName = "Loja 1",
                            UserAdress = "Endereço 1",
                            UserEmail = "usuario1@example.com",
                            UserName = "Usuário 1",
                            UserPassword = "senha123",
                            UserPhone = 123456789
                        },
                        new
                        {
                            UserId = 2,
                            ShopName = "Loja 2",
                            UserAdress = "Endereço 2",
                            UserEmail = "usuario2@example.com",
                            UserName = "Usuário 2",
                            UserPassword = "senha456",
                            UserPhone = 987654321
                        });
                });

            modelBuilder.Entity("BarberShop2024.Shared.BookMark", b =>
                {
                    b.HasOne("BarberShop2024.Shared.Customer", "Customer")
                        .WithMany("BookMarks")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BarberShop2024.Shared.Customer", b =>
                {
                    b.HasOne("BarberShop2024.Shared.User", "User")
                        .WithMany("Customers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BarberShop2024.Shared.ServicesBarber", b =>
                {
                    b.HasOne("BarberShop2024.Shared.User", "User")
                        .WithMany("Services")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BarberShop2024.Shared.Customer", b =>
                {
                    b.Navigation("BookMarks");
                });

            modelBuilder.Entity("BarberShop2024.Shared.User", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
